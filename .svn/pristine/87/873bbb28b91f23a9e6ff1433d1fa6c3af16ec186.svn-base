package tx.huobi.rest.impl;

import java.io.IOException;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.http.HttpException;

import tx.huobi.Const;
import tx.huobi.rest.IV1RestApi;
import tx.huobi.tools.CryptoUtils;
import tx.huobi.tools.HttpUtilManager;
import tx.huobi.tools.ParamUtils;

public class V1RestApi implements IV1RestApi {

	private static String V1_URL = "https://api.huobi.pro";

	private static String SIGN_URL = "api.huobi.pro";

	@Override
	public String commonSymbols() throws HttpException, IOException {
		HttpUtilManager httpUtil = HttpUtilManager.getInstance();
		return httpUtil.requestHttpGet(V1_URL, "/v1/common/symbols");
	}

	@Override
	public String commonCurrencys() throws HttpException, IOException {
		HttpUtilManager httpUtil = HttpUtilManager.getInstance();
		return httpUtil.requestHttpGet(V1_URL, "/v1/common/currencys");
	}

	@Override
	public String commonTimestamp() throws HttpException, IOException {
		HttpUtilManager httpUtil = HttpUtilManager.getInstance();
		return httpUtil.requestHttpGet(V1_URL, "/v1/common/timestamp");
	}

	private Map<String, String> getCommonParam() {
		Map<String, String> signMap = new HashMap<String, String>();
		signMap.put("AccessKeyId", Const.Access_Key);
		signMap.put("SignatureMethod", Const.SignatureMethod);
		signMap.put("SignatureVersion", Const.SignatureVersion);
		signMap.put("Timestamp", ParamUtils.getUTCDate());
		return signMap;
	}

	@Override
	public String accounts() throws HttpException, IOException {
		HttpUtilManager httpUtil = HttpUtilManager.getInstance();
		String url = "/v1/account/accounts";
		Map<String, String> signMap = getCommonParam();
		ParamUtils.createLinkString(signMap);
		String sign = CryptoUtils.buildSign("GET", SIGN_URL, url, signMap);
		signMap.put("Signature", sign);

		return httpUtil.requestHttpGet(V1_URL, url, signMap);
	}

	@Override
	public String accountsBalance(String accountId) throws HttpException, IOException {
		HttpUtilManager httpUtil = HttpUtilManager.getInstance();
		String url = String.format("/v1/account/accounts/%s/balance", accountId);
		Map<String, String> signMap = getCommonParam();
		ParamUtils.createLinkString(signMap);
		String sign = CryptoUtils.buildSign("GET", SIGN_URL, url, signMap);
		signMap.put("Signature", sign);

		return httpUtil.requestHttpGet(V1_URL, url, signMap);
	}

	@Override
	public String place(String accountId, String amount, String price, String source, String symbol, String type)
			throws HttpException, IOException {
		HttpUtilManager httpUtil = HttpUtilManager.getInstance();
		String url = "/v1/order/orders/place";
		Map<String, String> signMap = getCommonParam();
		ParamUtils.createLinkString(signMap);
		String sign = CryptoUtils.buildSign("POST", SIGN_URL, url, signMap);
		signMap.put("Signature", sign);

		Map<String, String> paramMap = new HashMap<String, String>();
		paramMap.put("account-id", accountId);
		paramMap.put("amount", amount);
		paramMap.put("price", price);
		paramMap.put("source", source);
		paramMap.put("symbol", symbol);
		paramMap.put("type", type);

		return httpUtil.requestHttpPost(V1_URL, url, signMap, paramMap);
	}

	@Override
	public String submitcancel(String orderId) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String batchcancel(List<String> orderIds) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String orders(String orderId) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String matchresults(String orderId) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String orders(String symbol, String types, String startDate, String endDate, String states, String from,
			String direct, String size) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String matchresults(String symbol, String types, String startDate, String endDate, String from,
			String direct, String size) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String transferInMargin(String symbol, String currency, String amount) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String transferOutMargin(String symbol, String currency, String amount) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String marginOrders(String symbol, String currency, String amount) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String marginOrdersRepay(String orderId, String amount) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String marginLoanOrders(String symbol, String currency, String startDate, String endDate, String states,
			String from, String direct, String size) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String marginAccountsBalance(String symbol) throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String withdraw(String address, String amount, String currency, String fee, String addrTag)
			throws HttpException, IOException {
		// TODO Auto-generated method stub
		return null;
	}

}
